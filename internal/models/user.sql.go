// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package models

import (
	"context"

	"github.com/google/uuid"
)

const createNewUser = `-- name: CreateNewUser :one
INSERT INTO
    "user" (id, user_type, updated_by)
VALUES (
        $1, -- id
        $2, -- UserType
        $3 -- Updated By
    ) RETURNING id, user_type, updated_at, created_at, updated_by
`

type CreateNewUserParams struct {
	ID        uuid.UUID
	UserType  NullUserType
	UpdatedBy uuid.NullUUID
}

func (q *Queries) CreateNewUser(ctx context.Context, arg CreateNewUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createNewUser, arg.ID, arg.UserType, arg.UpdatedBy)
	var i User
	err := row.Scan(
		&i.ID,
		&i.UserType,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}
