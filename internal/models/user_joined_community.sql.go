// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_joined_community.sql

package models

import (
	"context"

	"github.com/google/uuid"
)

const updateUserJoinedCommunityAccess = `-- name: UpdateUserJoinedCommunityAccess :one
UPDATE user_joined_community
SET
  updated_at = now(),
  updated_by = $3
WHERE community_id = $1 AND user_id = $2
RETURNING user_id, community_id, updated_at, created_at, updated_by
`

type UpdateUserJoinedCommunityAccessParams struct {
	CommunityID uuid.UUID
	UserID      uuid.UUID
	UpdatedBy   uuid.NullUUID
}

func (q *Queries) UpdateUserJoinedCommunityAccess(ctx context.Context, arg UpdateUserJoinedCommunityAccessParams) (UserJoinedCommunity, error) {
	row := q.db.QueryRowContext(ctx, updateUserJoinedCommunityAccess, arg.CommunityID, arg.UserID, arg.UpdatedBy)
	var i UserJoinedCommunity
	err := row.Scan(
		&i.UserID,
		&i.CommunityID,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}
