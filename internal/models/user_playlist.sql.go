// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user_playlist.sql

package models

import (
	"context"

	"github.com/google/uuid"
)

const createUserPlaylist = `-- name: CreateUserPlaylist :one
INSERT INTO user_playlist (
    user_id,
    playlist_id,
    updated_by
)
VALUES ($1, $2, $3)
ON CONFLICT (user_id, playlist_id) DO UPDATE
SET 
    updated_at = NOW(),
    updated_by = EXCLUDED.updated_by
RETURNING user_id, playlist_id, updated_at, created_at, updated_by
`

type CreateUserPlaylistParams struct {
	UserID     uuid.UUID
	PlaylistID uuid.UUID
	UpdatedBy  uuid.NullUUID
}

func (q *Queries) CreateUserPlaylist(ctx context.Context, arg CreateUserPlaylistParams) (UserPlaylist, error) {
	row := q.db.QueryRowContext(ctx, createUserPlaylist, arg.UserID, arg.PlaylistID, arg.UpdatedBy)
	var i UserPlaylist
	err := row.Scan(
		&i.UserID,
		&i.PlaylistID,
		&i.UpdatedAt,
		&i.CreatedAt,
		&i.UpdatedBy,
	)
	return i, err
}
